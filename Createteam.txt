$ErrorActionPreference = 'Stop'
#region Variables for the scenario

# You must specify 2 or 4 network adapter port names
$netAdapterName = @('PNIC1','PNIC2')
$switchName = 'S2DSwitch'

# Management Adapter Parameters
$managementAdapterName = 'Management'

# VLAN ID for host management traffic; if no VLAN is preferred set this to 0
$managementVlanId = 0

# Management Gateway address
$managementGateway = '172.16.186.254'

# DNS server address
$managementDns = '172.16.186.11','172.16.186.21'

# Set this to a string 'DHCP' for a dynamic IP address
$managementIPAddress = '172.16.186.184'

# Management address prefix (24 translates to subnet mask 255.255.255.0)
$managementAddressPrefix = 16

# Storage Adapter Parameters
$storageAdapterPrefix = 'Storage'

# You must specify 1 or 2 or 4 VLANIDs
# You can use 0 as the value if you don't want to use VLANs for storage traffic
$storageVlanId = @(172,173)

# You must specify 2 or 4 IP Addresses
# DHCP as a value is accepted if you want dynamically assigned IP addresses
$storageIPAddress = @('10.0.172.1','10.0.173.2')

# You can specify 1 or 2 or 4 prefix length values
$StorageAddressPrefix = @(24)

#endregion


## Create a VM switch for management and Storage traffic
$null = New-VMSwitch -Name $SwitchName -AllowManagementOS 0 -NetAdapterName $netAdapterName -MinimumBandwidthMode Weight -Verbose -Confirm:$false

New-VMSwitch -Name $SwitchName -AllowManagementOS 0 -NetAdapterName $netAdapterName -MinimumBandwidthMode Weight -Verbose -Confirm:$false

## Add VM Network Adapters and configure VLANs and IP addresses as needed
### Management Adapter
$managementAdapter = Add-VMNetworkAdapter -SwitchName $SwitchName -ManagementOS -Passthru -Name $managementAdapterName -Verbose
if ($managementVlanId -and ($managementVlanId -ne 0))
{
 Set-VMNetworkAdapterVlan -VMNetworkAdapter $managementAdapter -Access -VlanId $managementVlanId -Verbose
 Start-Sleep -Seconds 5
}
if ($ManagementIPAddress -ne 'DHCP')
{
 $null = New-NetIPAddress -InterfaceAlias "vEthernet ($managementAdapterName)" -IPAddress $managementIPAddress -DefaultGateway $managementGateway -PrefixLength $managementAddressPrefix -Verbose
 Set-DnsClientServerAddress -InterfaceAlias "vEthernet ($managementAdapterName)" -ServerAddresses $managementDns -Verbose
}

### Storage Adapters
for ($i = 0; $i -lt $netAdapterName.Count; $i++)
{
 $storageAdapterName = "${storageAdapterPrefix}$($i+1)"
 # if there is a single VLAN for storage use the first and only element
 if ($storageVlanId.Count -eq 1)
 {
 $storageVlan = $storageVlanId[0]
 }
 else
 {
 # else use the right index to get the VLAN ID
 $storageVlan = $storageVlanId[$i]
 }
 # Check if only one prefix is provided
 if ($StorageAddressPrefix.Count -eq 1)
 {
 $StoragePrefix = $StorageAddressPrefix[0]
 }
 else
 {
 # if more than one, use the right index to get the address prefix
 $StoragePrefix = $StorageAddressPrefix[$i]
 }
 $storageAdapter = Add-VMNetworkAdapter -SwitchName $SwitchName -ManagementOS -Passthru -Name $storageAdapterName -Verbose
 if ($storageVlan -and ($storageVlan -ne 0))
 {
 # Set VM Network adapter VLAN only if the VLAN ID specified is other than 0
 Set-VMNetworkAdapterVlan -VMNetworkAdapter $storageAdapter -Access -VlanId $storageVlan -Verbose
 Start-Sleep -Seconds 5
 }
 if ($StorageIPAddress[$i] -ne 'DHCP')
 {
 $null = New-NetIPAddress -InterfaceAlias "vEthernet ($storageAdapterName)" -IPAddress $StorageIPAddress[$i] -PrefixLength $StoragePrefix -Verbose
 }
 ## Set VMnetwork adapter to Physical adapter mapping
 Set-VMNetworkAdapterTeamMapping -VMNetworkAdapterName $storageAdapterName -ManagementOS -PhysicalNetAdapterName $netAdapterName[$i]

}
